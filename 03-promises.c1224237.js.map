{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,mBAChCE,EAAQH,SAASC,cAAc,kBAC/BG,EAAOJ,SAASC,cAAc,iBA+BpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WAELH,EAEFF,EADY,CAAEH,WAAUS,MAAAR,IAKxBG,EADY,CAAEJ,WAAUS,MAAAR,G,GAGzBA,E,IA1CPR,EAAKiB,iBAAiB,UAAU,SAACC,GAC/B,IAAIC,EAAoBC,OAAOhB,EAAMiB,OACjCC,EAAeH,EACfI,GAAmB,EAEvB,GADAL,EAAMM,iBACFL,GAAqB,GAAKd,EAAKgB,OAAS,GAAKlB,EAAOkB,OAAS,EAC/D,OAAOI,EAAA3B,GAAS4B,OAAOC,QACrB,OACA,oCACA,aAGJ,IAAK,IAAIC,EAAI,EAAGA,GAAKzB,EAAOkB,MAAOO,IAC5BL,IACHD,GAAgBF,OAAOf,EAAKgB,QAG9Bf,EAAcsB,EAAGN,GACdO,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUwB,EAAKD,EAALd,MACjBS,EAAA3B,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAANH,EAAM,M,IAEvEI,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAU6B,EAAKN,EAALd,MAClBS,EAAA3B,GAASkC,OAAOK,QAAQ,sBAAqCH,OAAf3B,EAAS,QAAY2B,OAANE,EAAM,M,IAGvEb,GAAmB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\nconst amount = document.querySelector('[name=\"amount\"]');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\n\nform.addEventListener('submit', (event) => {\n  let initialDelayValue = Number(delay.value);\n  let PromiseDelay = initialDelayValue;\n  let isFirstIteration = true;\n  event.preventDefault();\n  if (initialDelayValue <= 0 || step.value <= 0 || amount.value <= 0) {\n    return Notiflix.Report.warning(\n      'Opss',\n      'The number must be greater than 0',\n      'Try again'\n    );\n  }\n  for (let i = 1; i <= amount.value; i ++) {\n    if (!isFirstIteration) {\n      PromiseDelay += Number(step.value);\n    }\n\n    createPromise(i, PromiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`); \n      });\n\n    isFirstIteration = false;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n\n      if (shouldResolve) {\n        const obj = { position, delay }\n        resolve(obj)\n      } else {\n\n        const obj = { position, delay }\n        reject(obj)\n      }\n    }, delay);\n\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","initialDelayValue","Number","value","PromiseDelay","isFirstIteration","preventDefault","$parcel$interopDefault","Report","warning","i","then","param","delay1","Notify","success","concat","catch","delay2","failure"],"version":3,"file":"03-promises.c1224237.js.map"}